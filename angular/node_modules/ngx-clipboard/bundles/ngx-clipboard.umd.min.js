!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core"),require("ngx-window-token"),require("rxjs")):"function"==typeof define&&define.amd?define("ngx-clipboard",["exports","@angular/common","@angular/core","ngx-window-token","rxjs"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-clipboard"]={},e.ng.common,e.ng.core,e.i2,e.rxjs)}(this,(function(e,t,n,o,r){"use strict";var i=function(){function e(e,t,n){this.ngZone=e,this.document=t,this.window=n,this.copySubject=new r.Subject,this.copyResponse$=this.copySubject.asObservable(),this.config={}}return e.prototype.configure=function(e){this.config=e},e.prototype.copy=function(e){if(!this.isSupported||!e)return this.pushCopyResponse({isSuccess:!1,content:e});var t=this.copyFromContent(e);return t?this.pushCopyResponse({content:e,isSuccess:t}):this.pushCopyResponse({isSuccess:!1,content:e})},Object.defineProperty(e.prototype,"isSupported",{get:function(){return!!this.document.queryCommandSupported&&!!this.document.queryCommandSupported("copy")&&!!this.window},enumerable:!1,configurable:!0}),e.prototype.isTargetValid=function(e){if(e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement){if(e.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');return!0}throw new Error("Target should be input or textarea")},e.prototype.copyFromInputElement=function(e,t){void 0===t&&(t=!0);try{this.selectTarget(e);var n=this.copyText();return this.clearSelection(t?e:void 0,this.window),n&&this.isCopySuccessInIE11()}catch(e){return!1}},e.prototype.isCopySuccessInIE11=function(){var e=this.window.clipboardData;return!(e&&e.getData&&!e.getData("Text"))},e.prototype.copyFromContent=function(e,t){if(void 0===t&&(t=this.document.body),this.tempTextArea&&!t.contains(this.tempTextArea)&&this.destroy(this.tempTextArea.parentElement||void 0),!this.tempTextArea){this.tempTextArea=this.createTempTextArea(this.document,this.window);try{t.appendChild(this.tempTextArea)}catch(e){throw new Error("Container should be a Dom element")}}this.tempTextArea.value=e;var n=this.copyFromInputElement(this.tempTextArea,!1);return this.config.cleanUpAfterCopy&&this.destroy(this.tempTextArea.parentElement||void 0),n},e.prototype.destroy=function(e){void 0===e&&(e=this.document.body),this.tempTextArea&&(e.removeChild(this.tempTextArea),this.tempTextArea=void 0)},e.prototype.selectTarget=function(e){return e.select(),e.setSelectionRange(0,e.value.length),e.value.length},e.prototype.copyText=function(){return this.document.execCommand("copy")},e.prototype.clearSelection=function(e,t){var n;e&&e.focus(),null===(n=t.getSelection())||void 0===n||n.removeAllRanges()},e.prototype.createTempTextArea=function(e,t){var n,o="rtl"===e.documentElement.getAttribute("dir");(n=e.createElement("textarea")).style.fontSize="12pt",n.style.border="0",n.style.padding="0",n.style.margin="0",n.style.position="absolute",n.style[o?"right":"left"]="-9999px";var r=t.pageYOffset||e.documentElement.scrollTop;return n.style.top=r+"px",n.setAttribute("readonly",""),n},e.prototype.pushCopyResponse=function(e){var t=this;this.copySubject.observers.length>0&&this.ngZone.run((function(){t.copySubject.next(e)}))},e.prototype.pushCopyReponse=function(e){this.pushCopyResponse(e)},e}();i.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new i(n.ɵɵinject(n.NgZone),n.ɵɵinject(t.DOCUMENT),n.ɵɵinject(o.WINDOW,8))},token:i,providedIn:"root"}),i.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],i.ctorParameters=function(){return[{type:n.NgZone},{type:void 0,decorators:[{type:n.Inject,args:[t.DOCUMENT]}]},{type:void 0,decorators:[{type:n.Optional},{type:n.Inject,args:[o.WINDOW]}]}]};var s=function(){function e(e,t,o,r){var i=this;this.ngZone=e,this.host=t,this.renderer=o,this.clipboardSrv=r,this.cbOnSuccess=new n.EventEmitter,this.cbOnError=new n.EventEmitter,this.onClick=function(e){i.clipboardSrv.isSupported?i.targetElm&&i.clipboardSrv.isTargetValid(i.targetElm)?i.handleResult(i.clipboardSrv.copyFromInputElement(i.targetElm),i.targetElm.value,e):i.cbContent&&i.handleResult(i.clipboardSrv.copyFromContent(i.cbContent,i.container),i.cbContent,e):i.handleResult(!1,void 0,e)}}return e.prototype.ngOnInit=function(){var e=this;this.ngZone.runOutsideAngular((function(){e.clickListener=e.renderer.listen(e.host.nativeElement,"click",e.onClick)}))},e.prototype.ngOnDestroy=function(){this.clickListener(),this.clipboardSrv.destroy(this.container)},e.prototype.handleResult=function(e,t,n){var o=this,r={isSuccess:e,event:n};e?this.cbOnSuccess.observers.length>0&&(r=Object.assign(r,{content:t,successMessage:this.cbSuccessMsg}),this.ngZone.run((function(){o.cbOnSuccess.emit(r)}))):this.cbOnError.observers.length>0&&this.ngZone.run((function(){o.cbOnError.emit(r)})),this.clipboardSrv.pushCopyResponse(r)},e}();s.decorators=[{type:n.Directive,args:[{selector:"[ngxClipboard]"}]}],s.ctorParameters=function(){return[{type:n.NgZone},{type:n.ElementRef},{type:n.Renderer2},{type:i}]},s.propDecorators={targetElm:[{type:n.Input,args:["ngxClipboard"]}],container:[{type:n.Input}],cbContent:[{type:n.Input}],cbSuccessMsg:[{type:n.Input}],cbOnSuccess:[{type:n.Output}],cbOnError:[{type:n.Output}]};var c=function(){function e(e,t,n){this._clipboardService=e,this._viewContainerRef=t,this._templateRef=n}return e.prototype.ngOnInit=function(){this._clipboardService.isSupported&&this._viewContainerRef.createEmbeddedView(this._templateRef)},e}();c.decorators=[{type:n.Directive,args:[{selector:"[ngxClipboardIfSupported]"}]}],c.ctorParameters=function(){return[{type:i},{type:n.ViewContainerRef},{type:n.TemplateRef}]};var p=function(){};p.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[s,c],exports:[s,c]}]}],e.ClipboardDirective=s,e.ClipboardIfSupportedDirective=c,e.ClipboardModule=p,e.ClipboardService=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-clipboard.umd.min.js.map